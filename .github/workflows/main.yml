name: Main

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 16

    - name: Install dependencies
      run: npm run install-frontend
          
    - name: Build React app
      run: npm run build-frontend

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Docker Login
      run:
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and Upload the Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/hps-server:latest
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Clean the server's root directory
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          find /root/compose -mindepth 1 -not -path '/root/compose/certbot*' -delete

    - name: Prepare files for copying
      run: |
        mkdir temp
        rsync -av --progress ./compose/ ./temp/compose/ --exclude certbot
      

    - name: Copy compose folder
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        source: "./temp/compose"
        target: "/root"

    - name: Actual deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          docker stop $(docker ps -a -q)
          docker container prune -f
          docker rmi $(docker images -a -q)
          docker network prune -f
          sudo kill -9 $(sudo lsof -t -i :443)
          systemctl stop docker
          systemctl start docker.service
          cd /root/compose
          docker compose up -d
